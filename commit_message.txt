refactor(ir): 통합된 StructItem 모델을 사용하도록 IR 및 생성기 리팩토링

이번 커밋은 구조체 정의를 위한 중간 표현(IR) 모델을 리팩토링하여 일관성과 확장성을 개선합니다. 또한 Rhai 기반 생성기를 개선하여 재귀적 템플릿 렌더링을 더 잘 지원하도록 합니다.

주요 변경 사항:

1.  **통합된 `StructItem` 모델:**
    - `StructDef` 모델에서 `embedded_structs`와 `inline_enums`를 위한 별도의 목록을 제거하여 단순화했습니다.
    - 이제 단일 `items: Vec<StructItem>`이 구조체의 모든 자식 요소를 포함합니다.
    - `StructItem` 열거형은 `EmbeddedStruct(StructDef)`와 `InlineEnum(EnumDef)` variant를 포함하도록 확장되어 모든 구조체 멤버에 대한 통합되고 일관된 모델을 만듭니다.

2.  **`is_embed` 플래그 제거:**
    - `StructDef`의 중복 필드였던 `is_embed: bool` 플래그를 제거했습니다. 이제 `StructDef`가 `NamespaceItem::Struct`인지 `StructItem::EmbeddedStruct`인지 컨텍스트를 통해 임베드 타입을 결정합니다.

3.  **개선된 Rhai `render_items` 함수:**
    - Rhai 생성기의 `render_items` 함수를 `register_raw_fn`에서 더 안정적인 `register_fn`으로 변경했습니다.
    - 이제 세 번째 인자로 `variable_name`을 받아, 템플릿이 다른 템플릿을 재귀적으로 호출할 때 컨텍스트 변수 이름을 지정할 수 있습니다. 이를 통해 변수 이름 불일치(예: 'item' 대 's' 또는 'e')로 인한 런타임 오류를 해결합니다.

4.  **업데이트된 C# 템플릿:**
    - C# 템플릿(`csharp_logic_struct_body.rhai`, `csharp_enum.rhai`)을 새로운 3-인자 `render_items` 함수를 사용하도록 업데이트했습니다.
    - 이를 통해 주 구조체 및 열거형 템플릿을 재사용하여 임베디드 구조체와 인라인 열거형이 올바르게 렌더링되도록 보장합니다.