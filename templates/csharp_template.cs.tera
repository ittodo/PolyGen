using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;


{%- macro render_items(items, indentation) -%}
    {%- for item in items -%}
    {%- if item.doc_comment %}
{{ indentation }}/// <summary>
{%- for line in item.doc_comment | split(pat="\n") %}
{{ indentation }}/// {{ line | trim }}
{%- endfor %}
{{ indentation }}/// </summary>
    {%- endif %}
    {%- if item.type == "class" %}
{{ indentation }}public class {{ item.name }}
{{ indentation }}{
        {%- if item.nested_items -%}
        {%- for nested_item in item.nested_items %}
        {%- if nested_item.doc_comment %}
{{ indentation }}    /// <summary>
{%- for line in nested_item.doc_comment | split(pat="\n") %}
{{ indentation }}    /// {{ line | trim }}
{%- endfor %}
{{ indentation }}    /// </summary>
        {%- endif %}
{{ indentation }}    public class {{ nested_item.name }}
{{ indentation }}    {
            {%- for field in nested_item.fields -%}
            {%- if field.doc_comment %}
{{ indentation }}        /// <summary>
{%- for line in field.doc_comment | split(pat="\n") %}
{{ indentation }}        /// {{ line | trim }}
{%- endfor %}
{{ indentation }}        /// </summary>
            {%- endif %}
            {%- for attribute in field.attributes %}
{{ indentation }}        {{ attribute }}
            {%- endfor %}
{{ indentation }}        public {{ field.type }} {{ field.name }} { get; set; }
            {%- if not loop.last %}

            {%- endif %}
            {%- endfor %}
{{ indentation }}    }
        {%- if not loop.last or item.fields|length > 0 %}

        {%- endif %}
        {%- endfor %}
        {%- endif %}
        {%- for field in item.fields -%}
        {%- if field.doc_comment %}
{{ indentation }}    /// <summary>
{%- for line in field.doc_comment | split(pat="\n") %}
{{ indentation }}    /// {{ line | trim }}
{%- endfor %}
{{ indentation }}    /// </summary>
        {%- endif %}
        {%- for attribute in field.attributes %}
{{ indentation }}    {{ attribute }}
        {%- endfor %}
{{ indentation }}    public {{ field.type }} {{ field.name }} { get; set; }
        {%- if not loop.last %}

        {%- endif %}
        {%- endfor %}
{{ indentation }}}
    {%- elif item.type == "enum" %}
{{ indentation }}public enum {{ item.name }}
{{ indentation }}{
        {%- for variant in item.variants -%}
        {# 참고: 열거형의 각 variant에 대한 주석은 아직 파서에서 지원하지 않습니다. #}
{{ indentation }}    {{ variant }},
        {%- endfor %}
{{ indentation }}}
    {%- elif item.type == "struct" %}
{{ indentation }}public struct {{ item.name }}
{{ indentation }}{
        {%- for field in item.fields -%}
        {%- if field.doc_comment %}
{{ indentation }}    /// <summary>
{%- for line in field.doc_comment | split(pat="\n") %}
{{ indentation }}    /// {{ line | trim }}
{%- endfor %}
{{ indentation }}    /// </summary>
        {%- endif %}
        {%- for attribute in field.attributes %}
{{ indentation }}    {{ attribute }}
        {%- endfor %}
{{ indentation }}    public {{ field.type }} {{ field.name }} { get; set; }
        {%- if not loop.last %}

        {%- endif %}
        {%- endfor %}
{{ indentation }}}
    {%- endif %}
    {%- if not loop.last %}

    {%- endif %}
    {%- endfor %}
{%- endmacro %}

{%- macro render_namespace(ns, indentation) -%}
    {%- if ns.name != "" -%}
{{ indentation }}namespace {{ ns.name }}
{{ indentation }}{
    {{- self::render_items(items=ns.items, indentation=indentation ~ "    ") -}}
    {%- if ns.children | length > 0 and ns.items | length > 0 %}

    {%- endif -%}
    {%- for child in ns.children -%}

    {{- self::render_namespace(ns=child, indentation=indentation ~ "    ") -}}
    {%- if not loop.last %}

    {%- endif -%}
    {%- endfor -%}
    {%- if ns.items | length > 0 or ns.children | length > 0 %}

    {%- endif -%}
{{ indentation }}}
    {%- else -%}
        {# This is the global namespace, render items without the wrapper #}
        {{- self::render_items(items=ns.items, indentation="") -}}
    {%- endif -%}
{%- endmacro %}

{%- for ns in namespaces -%}
    {{- self::render_namespace(ns=ns, indentation="") -}}
    {%- if not loop.last %}


    {%- endif -%}
{%- endfor -%}
